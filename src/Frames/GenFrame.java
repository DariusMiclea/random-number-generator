/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Classes.DoubleGenerator;
import Classes.IntGenerator;
import Classes.MultiplierGenerator;
import Classes.ParityGenerator;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

/**
 *
 * @author Darius
 */
public class GenFrame extends javax.swing.JFrame {

    /**
     * Creates new form ShowGenFrame
     */
    public GenFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        genTextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Generated numbers:");

        genTextArea.setColumns(20);
        genTextArea.setRows(5);
        jScrollPane1.setViewportView(genTextArea);

        jMenu1.setText("Menu");

        jMenuItem1.setText("Restart");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Goleste fisierul");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        MainFrame mainFrame = new MainFrame();
        this.setVisible(false);
        mainFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        File file = new File("Output.txt");
        try {
            FileWriter fileWriter = new FileWriter(file);
        } catch (IOException ex) {
            System.out.println("eroare scriere in fisier");
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param start
     * @param finish
     * @param nr
     * @throws java.io.IOException
     */
    public void generateInt(double start, double finish, int nr) throws IOException {

        File file = new File("Output.txt");
        FileWriter fileWriter = new FileWriter(file, true);
        fileWriter.write("\n" + nr + " Numere intregi: " + "\n" + "\n");
        for (int i = 0; i < nr; i++) {
            IntGenerator gen = new IntGenerator(start, finish);
            Integer randInt = (int) gen.generate();
            System.out.println(randInt);
            this.genTextArea.append(randInt.toString() + "\n");
            fileWriter.write(randInt.toString() + "\n");
        }
        this.genTextArea.setEditable(false);
        fileWriter.write("---------------------------------------------");
        fileWriter.close();
    }

    public void generateDouble(double start, double finish, int nr) throws IOException {

        File file = new File("Output.txt");
        FileWriter fileWriter = new FileWriter(file, true);
        fileWriter.write("\n" + nr + " Numere double: " + "\n" + "\n");
        for (int i = 0; i < nr; i++) {
            DoubleGenerator gen = new DoubleGenerator(start, finish);
            Double randDouble = gen.generate();
            System.out.println(randDouble);
            this.genTextArea.append(randDouble.toString() + "\n");
            fileWriter.write(randDouble.toString() + "\n");

        }
        this.genTextArea.setEditable(false);
        fileWriter.write("---------------------------------------------");
        fileWriter.close();
    }

    public void generateMultiplier(double start, double finish, int nr, double mult) throws IOException {

        File file = new File("Output.txt");
        FileWriter fileWriter = new FileWriter(file, true);
        fileWriter.write("\n" + nr + " Numere double *multiplicate cu *: "+ mult + "\n" + "\n");
        for (int i = 0; i < nr; i++) {
            MultiplierGenerator gen = new MultiplierGenerator(start, finish, mult);
            Integer randInt = (int)gen.generate();
            System.out.println(randInt);
            this.genTextArea.append(randInt.toString() + "\n");
            fileWriter.write(randInt.toString() + "\n");

        }
        this.genTextArea.setEditable(false);
        fileWriter.write("---------------------------------------------");
        fileWriter.close();
    }

    public void generateParity(double start, double finish, int nr, boolean even) throws IOException {

        File file = new File("Output.txt");
        FileWriter fileWriter = new FileWriter(file, true);
        if(even){
            fileWriter.write("\n" + nr + " Numere pare: " + "\n" + "\n");
        }
        else{
            fileWriter.write("\n" + nr + " Numere impare: " + "\n" + "\n");
        }

        for (int i = 0; i < nr; i++) {
            ParityGenerator gen = new ParityGenerator(start, finish, even);
            Integer randInt = (int) gen.generate();
            System.out.println(randInt);
            this.genTextArea.append(randInt.toString() + "\n");
            fileWriter.write(randInt.toString() + "\n");

        }
        this.genTextArea.setEditable(false);
        fileWriter.write("---------------------------------------------");
        fileWriter.close();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenFrame().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea genTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
